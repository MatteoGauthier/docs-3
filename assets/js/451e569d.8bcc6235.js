"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[15514],{52393:(e,n,i)=>{i.d(n,{ZP:()=>d,d$:()=>s});var t=i(11527),r=i(17279);const s=[{value:"Create social IdP&#39;s account and register SAML application (IdP)",id:"create-social-idps-account-and-register-saml-application-idp",level:3},{value:"Configure SAML connector (SP)",id:"configure-saml-connector-sp",level:3},{value:"entityID <code>Required</code>",id:"entityid-required",level:4},{value:"signInEndpoint <code>Required</code>",id:"signinendpoint-required",level:4},{value:"x509Certificate <code>Required</code>",id:"x509certificate-required",level:4},{value:"idpMetadataXml <code>Required</code>",id:"idpmetadataxml-required",level:4},{value:"assertionConsumerServiceUrl <code>Required</code>",id:"assertionconsumerserviceurl-required",level:4},{value:"signAuthnRequest",id:"signauthnrequest",level:4},{value:"encryptAssertion",id:"encryptassertion",level:4},{value:"requestSignatureAlgorithm",id:"requestsignaturealgorithm",level:4},{value:"messageSigningOrder",id:"messagesigningorder",level:4},{value:"privateKey and privateKeyPass",id:"privatekey-and-privatekeypass",level:4},{value:"encPrivateKey and encPrivateKeyPass",id:"encprivatekey-and-encprivatekeypass",level:4},{value:"nameIDFormat",id:"nameidformat",level:4},{value:"timeout",id:"timeout",level:4},{value:"profileMap",id:"profilemap",level:4},{value:"Config types",id:"config-types",level:4},{value:"Reference",id:"reference",level:3}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"create-social-idps-account-and-register-saml-application-idp",children:"Create social IdP's account and register SAML application (IdP)"}),"\n",(0,t.jsx)(n.p,{children:"Let's go through configurations of SAML connector."}),"\n",(0,t.jsx)(n.p,{children:"Before we kicking off, you can go to a social identity provider which supports SAML protocol and create your own account. Okta, OneLogin, Salesforce and some other platforms support authentication based on SAML protocol."}),"\n",(0,t.jsx)(n.p,{children:"If your IdP mandate the encryption of SAML assertion and receiving of signed authentication requests, you should generate your private key and corresponding certificate using RSA algorithm. Keep the private key for your SP use and upload the certificate to IdP."}),"\n",(0,t.jsxs)(n.p,{children:["You also need to configure the ACS (Assertion Consumer Service) URL as ",(0,t.jsx)(n.code,{children:"${your_logto_origin}/api/authn/saml/${connector_id}"})," to handle IdP's SAML assertion. Where you can find your ",(0,t.jsx)(n.code,{children:"connectorId"})," at SAML connector's details page in Logto's Admin Console."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u2139\ufe0f ",(0,t.jsx)(n.strong,{children:"Note"})]}),"\n",(0,t.jsx)(n.p,{children:"Per current Logto's design, we only support Redirect-binding for sending authentication request and POST-binding for receiving SAML assertion. Although this sounds not cool, but we believe that the current design can handle most of your use cases. If you have any problems, feel free to reach out!"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"configure-saml-connector-sp",children:"Configure SAML connector (SP)"}),"\n",(0,t.jsx)(n.p,{children:"In this section, we will introduce each attribute in detail."}),"\n",(0,t.jsxs)(n.h4,{id:"entityid-required",children:["entityID ",(0,t.jsx)(n.code,{children:"Required"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"entityID"})," (i.e. ",(0,t.jsx)(n.code,{children:"issuer"}),") is Entity identifier. It is used to identify your entity (SAML SP entity), and match the equivalence in each SAML request/response."]}),"\n",(0,t.jsxs)(n.h4,{id:"signinendpoint-required",children:["signInEndpoint ",(0,t.jsx)(n.code,{children:"Required"})]}),"\n",(0,t.jsxs)(n.p,{children:["The IdP's endpoint that you send SAML authentication requests to. Usually, you can find this value in IdP details page (i.e. IdP's ",(0,t.jsx)(n.code,{children:"SSO URL"})," or ",(0,t.jsx)(n.code,{children:"Login URL"}),")."]}),"\n",(0,t.jsxs)(n.h4,{id:"x509certificate-required",children:["x509Certificate ",(0,t.jsx)(n.code,{children:"Required"})]}),"\n",(0,t.jsx)(n.p,{children:"The x509 certificate generated from IdPs private key, IdP is expected to have this value available."}),"\n",(0,t.jsxs)(n.p,{children:["The content of the certificate comes with ",(0,t.jsx)(n.code,{children:"-----BEGIN CERTIFICATE-----"})," header and ",(0,t.jsx)(n.code,{children:"-----END CERTIFICATE-----"})," tail."]}),"\n",(0,t.jsxs)(n.h4,{id:"idpmetadataxml-required",children:["idpMetadataXml ",(0,t.jsx)(n.code,{children:"Required"})]}),"\n",(0,t.jsx)(n.p,{children:"The field is used to place contents from your IdP metadata XML file."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u2139\ufe0f ",(0,t.jsx)(n.strong,{children:"Note"})]}),"\n",(0,t.jsxs)(n.p,{children:["The XML parser we are using does not support customized namespace.\nIf the IdP metadata comes with namespace, you should manually remove them.\nFor namespace of XML file, see ",(0,t.jsx)(n.a,{href:"http://www.xmlmaster.org/en/article/d01/c10/",children:"reference"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"assertionconsumerserviceurl-required",children:["assertionConsumerServiceUrl ",(0,t.jsx)(n.code,{children:"Required"})]}),"\n",(0,t.jsxs)(n.p,{children:["The assertion consumer service (ACS) URL is the SP's endpoint to receive IdP's SAML Assertion POST requests. As we mentioned in previous part, it is usually configured at IdP settings but some IdP get this value from SAML authentication requests, we hence also add this value as a REQUIRED field. It's value should look like ",(0,t.jsx)(n.code,{children:"${your_logto_origin}/api/authn/saml/${connector_id}"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"signauthnrequest",children:"signAuthnRequest"}),"\n",(0,t.jsxs)(n.p,{children:["The boolean value that controls whether SAML authentication request should be signed, whose default value is ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"encryptassertion",children:"encryptAssertion"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"encryptAssertion"})," is a boolean value that indicates if IdP will encrypt SAML assertion, with default value ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u2139\ufe0f ",(0,t.jsx)(n.strong,{children:"Note"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"signAuthnRequest"})," and ",(0,t.jsx)(n.code,{children:"encryptAssertion"})," attributes should align with corresponding parameters of IdP setting, otherwise error will be thrown to show that configuration does not match.\nAll SAML responses need to be signed."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"requestsignaturealgorithm",children:"requestSignatureAlgorithm"}),"\n",(0,t.jsxs)(n.p,{children:["This should be aligned with the signature algorithms of IdP so that Logto can verify the signature of the SAML assertion. Its value should be either ",(0,t.jsx)(n.code,{children:"http://www.w3.org/2000/09/xmldsig#rsa-sha1"}),", ",(0,t.jsx)(n.code,{children:"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"})," or ",(0,t.jsx)(n.code,{children:"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512"})," and the default value is ",(0,t.jsx)(n.code,{children:"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"messagesigningorder",children:"messageSigningOrder"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"messageSigningOrder"})," indicates the signing and encrypting order of IdP, it's value should be either ",(0,t.jsx)(n.code,{children:"sign-then-encrypt"})," or ",(0,t.jsx)(n.code,{children:"encrypt-then-sign"})," and the default value is ",(0,t.jsx)(n.code,{children:"sign-then-encrypt"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"privatekey-and-privatekeypass",children:"privateKey and privateKeyPass"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"privateKey"})," is an OPTIONAL value and is required when ",(0,t.jsx)(n.code,{children:"signAuthnRequest"})," is ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"privateKeyPass"})," is the password you've set when creating ",(0,t.jsx)(n.code,{children:"privateKey"}),", required when necessary."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"signAuthnRequest"})," is ",(0,t.jsx)(n.code,{children:"true"}),", the corresponding certificate generated from ",(0,t.jsx)(n.code,{children:"privateKey"})," is required by IdP for checking the signature."]}),"\n",(0,t.jsx)(n.h4,{id:"encprivatekey-and-encprivatekeypass",children:"encPrivateKey and encPrivateKeyPass"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"encPrivateKey"})," is an OPTIONAL value and is required when ",(0,t.jsx)(n.code,{children:"encryptAssertion"})," is ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"encPrivateKeyPass"})," is the password you've set when creating ",(0,t.jsx)(n.code,{children:"encPrivateKey"}),", required when necessary."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"encryptAssertion"})," is ",(0,t.jsx)(n.code,{children:"true"}),", the corresponding certificate generated from ",(0,t.jsx)(n.code,{children:"encPrivateKey"})," is required by IdP for encrypting SAML assertion."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u2139\ufe0f ",(0,t.jsx)(n.strong,{children:"Note"})]}),"\n",(0,t.jsxs)(n.p,{children:["For keys and certificates generation, ",(0,t.jsx)(n.code,{children:"openssl"})," is a wonderful tool. Here is sample command line that might be helpful:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"openssl genrsa -passout pass:${privateKeyPassword} -out ${encryptPrivateKeyFilename}.pem 4096\nopenssl req -new -x509 -key ${encryptPrivateKeyFilename}.pem -out ${encryptionCertificateFilename}.cer -days 3650\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"privateKey"})," and ",(0,t.jsx)(n.code,{children:"encPrivateKey"})," files are enforced to be encoded in ",(0,t.jsx)(n.code,{children:"pkcs1"})," scheme as pem string, which means the private key files should start with ",(0,t.jsx)(n.code,{children:"-----BEGIN RSA PRIVATE KEY-----"})," and end with ",(0,t.jsx)(n.code,{children:"-----END RSA PRIVATE KEY-----"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"nameidformat",children:"nameIDFormat"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"nameIDFormat"})," is an OPTIONAL attribute that declares the name id format that would respond. The value can be among ",(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"}),", ",(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"}),", ",(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName"}),", ",(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"})," and ",(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:2.0:nameid-format:transient"}),", and the default value is ",(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:2.0:nameid-format:unspecified"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"timeout",children:"timeout"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"timeout"})," is the time tolerance for time validation, since the time between your SP entity and IdP entity could be different and network connection may also bring some delay. The unit is in millisecond, and the default value is 5000 (i.e. 5s)."]}),"\n",(0,t.jsx)(n.h4,{id:"profilemap",children:"profileMap"}),"\n",(0,t.jsxs)(n.p,{children:["Logto also provide a ",(0,t.jsx)(n.code,{children:"profileMap"})," field that users can customize the mapping from the social vendors' profiles which are usually not standard. Each ",(0,t.jsx)(n.code,{children:"profileMap"})," keys is Logto's standard user profile field name and corresponding value should be social profiles field name. In current stage, Logto only concern 'id', 'name', 'avatar', 'email' and 'phone' from social profile, only 'id' is REQUIRED and others are optional fields."]}),"\n",(0,t.jsx)(n.h4,{id:"config-types",children:"Config types"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Default Value"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"signInEndpoint"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"true"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"x509certificate"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"true"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"idpMetadataXml"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"true"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"entityID"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"true"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"assertionConsumerServiceUrl"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"true"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"messageSigningOrder"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"encrypt-then-sign"})," | ",(0,t.jsx)(n.code,{children:"sign-then-encrypt"})]}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sign-then-encrypt"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"requestSignatureAlgorithm"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"http://www.w3.org/2000/09/xmldsig#rsa-sha1"})," | ",(0,t.jsx)(n.code,{children:"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"})," | ",(0,t.jsx)(n.code,{children:"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512"})]}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"signAuthnRequest"}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"false"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"encryptAssertion"}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"false"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"privateKey"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"privateKeyPass"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"nameIDFormat"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"})," | ",(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"})," | ",(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName"})," | ",(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"})," | ",(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:2.0:nameid-format:transient"})]}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"timeout"}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"5000"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"profileMap"}),(0,t.jsx)(n.td,{children:"ProfileMap"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{})]})]})]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"ProfileMap fields"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Default value"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"id"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"id"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"name"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"avatar"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"avatar"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"email"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"email"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"phone"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"phone"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"http://docs.oasis-open.org/security/saml/v2.0/saml-profiles-2.0-os.pdf",children:"Profiles for the OASIS Security Assertion Markup Language (SAML) V2.0"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/tngan/samlify",children:"samlify - Highly configuarable Node.js SAML 2.0 library for Single Sign On"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},37173:(e,n,i)=>{i.d(n,{ZP:()=>g,d$:()=>u});var t=i(11527),r=i(17279),s=i(11231),o=i(61648),d=i(93814),a=i(46007),c=i(93009),l=i(27882),h=i(94842);const u=[...a.d$,{value:"Installation",id:"installation",level:3},...c.d$,{value:"Add Logto authentication",id:"add-logto-authentication",level:3},...s.d$,{value:"Add sign-in redirect URI",id:"add-sign-in-redirect-uri",level:3},...o.d$,{value:"Add sign-out redirect URI",id:"add-sign-out-redirect-uri",level:3},...d.d$,{value:"Implement sign-in/sign-out buttons",id:"implement-sign-insign-out-buttons",level:3},...l.d$,...h.d$];function p(e){const n={h3:"h3",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.ZP,{}),"\n",(0,t.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(c.ZP,{}),"\n",(0,t.jsx)(n.h3,{id:"add-logto-authentication",children:"Add Logto authentication"}),"\n",(0,t.jsx)(s.ZP,{}),"\n",(0,t.jsx)(n.h3,{id:"add-sign-in-redirect-uri",children:"Add sign-in redirect URI"}),"\n",(0,t.jsx)(o.ZP,{}),"\n",(0,t.jsx)(n.h3,{id:"add-sign-out-redirect-uri",children:"Add sign-out redirect URI"}),"\n",(0,t.jsx)(d.ZP,{}),"\n",(0,t.jsx)(n.h3,{id:"implement-sign-insign-out-buttons",children:"Implement sign-in/sign-out buttons"}),"\n",(0,t.jsx)(l.ZP,{}),"\n",(0,t.jsx)(h.ZP,{sdk:".NET Core (Razor Pages)"})]})}function g(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},12606:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>j,connector:()=>m,contentTitle:()=>g,default:()=>v,frontMatter:()=>p,metadata:()=>x,toc:()=>f});var t=i(11527),r=i(17279),s=i(87593),o=i(80710),d=i(12665),a=i(80386),c=i(31877),l=i(23095),h=i(37173),u=i(52393);const p={slug:"how-to-build-saml-sign-in-with-dotnet-core-razor-pages-and-logto",authors:"logto",tags:["authentication","saml","dotnet-core-razor-pages","c#","social-sign-in","sign-in","login"],title:"How to build SAML sign-in with .NET Core (Razor Pages) and Logto"},g=void 0,x={permalink:"/tutorial/how-to-build-saml-sign-in-with-dotnet-core-razor-pages-and-logto",source:"@site/tutorial/build-with-logto/generated-dotnet-core-razor-pages-saml.mdx",title:"How to build SAML sign-in with .NET Core (Razor Pages) and Logto",description:"\x3c!--",date:"2024-06-30T08:28:35.000Z",tags:[{inline:!0,label:"authentication",permalink:"/tutorial/tags/authentication"},{inline:!0,label:"saml",permalink:"/tutorial/tags/saml"},{inline:!0,label:"dotnet-core-razor-pages",permalink:"/tutorial/tags/dotnet-core-razor-pages"},{inline:!0,label:"c#",permalink:"/tutorial/tags/c"},{inline:!0,label:"social-sign-in",permalink:"/tutorial/tags/social-sign-in"},{inline:!0,label:"sign-in",permalink:"/tutorial/tags/sign-in"},{inline:!0,label:"login",permalink:"/tutorial/tags/login"}],readingTime:1.33,hasTruncateMarker:!0,authors:[{name:"Logto team",title:"The better identity infrastructure for developers",url:"https://logto.io",imageURL:"https://github.com/logto-io.png",key:"logto"}],frontMatter:{slug:"how-to-build-saml-sign-in-with-dotnet-core-razor-pages-and-logto",authors:"logto",tags:["authentication","saml","dotnet-core-razor-pages","c#","social-sign-in","sign-in","login"],title:"How to build SAML sign-in with .NET Core (Razor Pages) and Logto"},unlisted:!1,prevItem:{title:"How to build OIDC sign-in with .NET Core (Razor Pages) and Logto",permalink:"/tutorial/how-to-build-oidc-sign-in-with-dotnet-core-razor-pages-and-logto"},nextItem:{title:"How to build SendGrid Email passwordless sign-in with .NET Core (Razor Pages) and Logto",permalink:"/tutorial/how-to-build-sendgrid-sign-in-with-dotnet-core-razor-pages-and-logto"}},j={authorsImageUrls:[void 0]},m="SAML",f=[...s.d$,{value:"Create an application in Logto",id:"create-an-application-in-logto",level:2},...o.d$,{value:"Integrate Logto SDK",id:"integrate-logto-sdk",level:2},...h.d$,{value:"Add SAML connector",id:"add-saml-connector",level:2},...d.d$,{value:"Set up Standard SAML app",id:"set-up-standard-saml-app",level:2},...u.d$,{value:"Save your configuration",id:"save-your-configuration",level:2},...a.d$,{value:"Enable SAML connector in Sign-in Experience",id:"enable-saml-connector-in-sign-in-experience",level:2},...c.d$,{value:"Testing and Validation",id:"testing-and-validation",level:2},...l.d$,{value:"Further readings",id:"further-readings",level:2}];function y(e){const n={a:"a",h2:"h2",p:"p",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.ZP,{connector:m,sdk:".NET Core (Razor Pages)",link:"https://learn.microsoft.com/aspnet/core/razor-pages/"}),"\n",(0,t.jsx)(n.h2,{id:"create-an-application-in-logto",children:"Create an application in Logto"}),"\n",(0,t.jsx)(o.ZP,{type:"Traditional web",framework:".NET Core (Razor Pages)"}),"\n",(0,t.jsx)(n.h2,{id:"integrate-logto-sdk",children:"Integrate Logto SDK"}),"\n",(0,t.jsx)(h.ZP,{}),"\n",(0,t.jsx)(n.h2,{id:"add-saml-connector",children:"Add SAML connector"}),"\n",(0,t.jsx)(d.ZP,{connector:m}),"\n",(0,t.jsx)(n.h2,{id:"set-up-standard-saml-app",children:"Set up Standard SAML app"}),"\n",(0,t.jsx)(u.ZP,{}),"\n",(0,t.jsx)(n.h2,{id:"save-your-configuration",children:"Save your configuration"}),"\n",(0,t.jsx)(a.ZP,{connector:m}),"\n",(0,t.jsx)(n.h2,{id:"enable-saml-connector-in-sign-in-experience",children:"Enable SAML connector in Sign-in Experience"}),"\n",(0,t.jsx)(c.ZP,{connector:m}),"\n",(0,t.jsx)(n.h2,{id:"testing-and-validation",children:"Testing and Validation"}),"\n",(0,t.jsx)(l.ZP,{connector:m,sdk:".NET Core (Razor Pages)"}),"\n",(0,t.jsx)(n.h2,{id:"further-readings",children:"Further readings"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/docs/recipes/protect-your-api/",children:"\u2694\ufe0f Protect your API"})," For native and single page apps, you'll need to call one or more API endpoints to retrieve and update data.",(0,t.jsx)("br",{}),"\nLearn more about identifying who's who and keeping your API secure."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/docs/recipes/manage-users/",children:"\ud83e\uddd1\u200d\ud83d\ude80 Manage users"})," We know you care about user management and activities, as we also do.",(0,t.jsx)("br",{}),"\nLearn more about how to know your users and see the figures like DAU and MAU graphically."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/docs/recipes/customize-sie/localized-language",children:"\ud83c\udf10 Localization"})," From one regional business to a global corporate, the willingness to offer the best user experience won't change.",(0,t.jsx)("br",{}),"\nYou can change current language phrases or add a new language without friction."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/blog/tags/ciam",children:"\ud83e\uddd1\u200d\ud83c\udf93 Customer IAM series"})," Our serial blog posts about Customer (or Consumer) Identity and Access Management, from 101 to advanced topics and beyond."]})]})}function v(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(y,{...e})}):y(e)}},11231:(e,n,i)=>{i.d(n,{ZP:()=>d,d$:()=>s});var t=i(11527),r=i(17279);const s=[];function o(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Open ",(0,t.jsx)(n.code,{children:"Startup.cs"})," (or ",(0,t.jsx)(n.code,{children:"Program.cs"}),") and add the following code to register Logto authentication services:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'using Logto.AspNetCore.Authentication;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddLogtoAuthentication(options =>\n{\n  options.Endpoint = builder.Configuration["Logto:Endpoint"]!;\n  options.AppId = builder.Configuration["Logto:AppId"]!;\n  options.AppSecret = builder.Configuration["Logto:AppSecret"];\n});\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"AddLogtoAuthentication"})," method will do the following things:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Set the default authentication scheme to ",(0,t.jsx)(n.code,{children:"LogtoDefaults.CookieScheme"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Set the default challenge scheme to ",(0,t.jsx)(n.code,{children:"LogtoDefaults.AuthenticationScheme"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Set the default sign-out scheme to ",(0,t.jsx)(n.code,{children:"LogtoDefaults.AuthenticationScheme"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Add cookie and OpenID Connect authentication handlers to the authentication scheme."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},61648:(e,n,i)=>{i.d(n,{ZP:()=>d,d$:()=>s});var t=i(11527),r=i(17279);const s=[];function o(e){const n={admonition:"admonition",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Add the following URI to the ",(0,t.jsx)(n.code,{children:"Redirect URIs"})," list in the Logto application details page:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"http://<your-web-app-uri>/Callback\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Note this is different from the redirect URI we'll use later in ",(0,t.jsx)(n.code,{children:"AuthenticationProperties"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'// Just for reference, we will demonstrate how to use it later\nnew AuthenticationProperties\n{\n  RedirectUri = "/"\n};\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"RedirectUri"})," property is used to redirect the user back to your web application after authentication. Note it is different from the redirect URI you configured in the Logto application details page:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"The redirect URI in the Logto application details page is the URI that Logto will redirect the user back to after the user has signed in."}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"RedirectUri"})," property is the URI that will be redirected to after necessary actions have been taken in the Logto authentication middleware."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The order of the actions is 1 -> 2. For clarity, let's call the redirect URI in the Logto application details page the ",(0,t.jsx)(n.strong,{children:"Logto redirect URI"})," and the ",(0,t.jsx)(n.code,{children:"RedirectUri"})," property the ",(0,t.jsx)(n.strong,{children:"application redirect URI"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Logto redirect URI"})," has a default value of ",(0,t.jsx)(n.code,{children:"/Callback"}),", which you can leave it as is if there's no special requirement. If you want to change it, you can set the ",(0,t.jsx)(n.code,{children:"CallbackPath"})," property for ",(0,t.jsx)(n.code,{children:"LogtoOptions"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'builder.Services.AddLogtoAuthentication(options =>\n{\n  // Other configurations...\n  options.CallbackPath = "/SomeOtherCallbackPath";\n});\n'})}),"\n",(0,t.jsx)(n.p,{children:"Remember to update the value in the Logto application details page accordingly."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["No need to set the ",(0,t.jsx)(n.strong,{children:"application redirect URI"})," in the Logto application details page."]})})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},93814:(e,n,i)=>{i.d(n,{ZP:()=>d,d$:()=>s});var t=i(11527),r=i(17279);const s=[];function o(e){const n={admonition:"admonition",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Add the following URI to the ",(0,t.jsx)(n.code,{children:"Post sign-out redirect URIs"})," list in the Logto application details page:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"http://<your-web-app-uri>/SignedOutCallback\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Note this is different from the redirect URI we'll use later in ",(0,t.jsx)(n.code,{children:"AuthenticationProperties"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'// Just for reference, we will demonstrate how to use it later\nnew AuthenticationProperties\n{\n  RedirectUri = "/"\n};\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"RedirectUri"})," property is used to redirect the user back to your web application after sign-out. Note it is different from the post sign-out redirect URI you configured in the Logto application details page:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"The post sign-out redirect URI in the Logto application details page is the URI that Logto will redirect the user back to after the user has signed out."}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"RedirectUri"})," property is the URI that will be redirected to after necessary actions have been taken in the Logto authentication middleware."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The order of the actions is 1 -> 2. For clarity, let's call the post sign-out redirect URI in the Logto application details page the ",(0,t.jsx)(n.strong,{children:"Logto post sign-out redirect URI"})," and the ",(0,t.jsx)(n.code,{children:"RedirectUri"})," property the ",(0,t.jsx)(n.strong,{children:"application post sign-out redirect URI"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Logto post sign-out redirect URI"})," has a default value of ",(0,t.jsx)(n.code,{children:"/SignedOutCallback"}),", which you can leave it as is if there's no special requirement. If you want to change it, you can set the ",(0,t.jsx)(n.code,{children:"SignedOutCallbackPath"})," property for ",(0,t.jsx)(n.code,{children:"LogtoOptions"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'builder.Services.AddLogtoAuthentication(options =>\n{\n  // Other configurations...\n  options.SignedOutCallbackPath = "/SomeOtherSignedOutCallbackPath";\n});\n'})}),"\n",(0,t.jsx)(n.p,{children:"Remember to update the value in the Logto application details page accordingly."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["No need to set the ",(0,t.jsx)(n.strong,{children:"application post sign-out redirect URI"})," in the Logto application details page."]})})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},46007:(e,n,i)=>{i.d(n,{ZP:()=>d,d$:()=>s});var t=i(11527),r=i(17279);const s=[];function o(e){const n={a:"a",admonition:"admonition",li:"li",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The following demonstration is built on .NET Core 8.0. The SDK is compatible with .NET 6.0 or higher."}),"\n",(0,t.jsxs)(n.li,{children:["The .NET Core sample projects are available in the ",(0,t.jsx)(n.a,{href:"https://github.com/logto-io/csharp",children:"GitHub repository"}),"."]}),"\n"]})})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},93009:(e,n,i)=>{i.d(n,{ZP:()=>d,d$:()=>s});var t=i(11527),r=i(17279);const s=[];function o(e){const n={code:"code",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Add the NuGet package to your project:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dotnet add package Logto.AspNetCore.Authentication\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},27882:(e,n,i)=>{i.d(n,{ZP:()=>d,d$:()=>s});var t=i(11527),r=i(17279);const s=[];function o(e){const n={code:"code",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["First, add the handler methods to your ",(0,t.jsx)(n.code,{children:"PageModel"}),", for example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public class IndexModel : PageModel\n{\n  public async Task OnPostSignInAsync()\n  {\n    await HttpContext.ChallengeAsync(new AuthenticationProperties\n    {\n      RedirectUri = "/"\n    });\n  }\n\n  public async Task OnPostSignOutAsync()\n  {\n    await HttpContext.SignOutAsync(new AuthenticationProperties\n    {\n      RedirectUri = "/"\n    });\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Then, add the buttons to your Razor page:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cshtml",children:'<p>Is authenticated: @User.Identity?.IsAuthenticated</p>\n<form method="post">\n  @if (User.Identity?.IsAuthenticated == true) {\n    <button type="submit" asp-page-handler="SignOut">Sign out</button>\n  } else {\n    <button type="submit" asp-page-handler="SignIn">Sign in</button>\n  }\n</form>\n'})}),"\n",(0,t.jsx)(n.p,{children:'It will show the "Sign in" button if the user is not authenticated, and show the "Sign out" button if the user is authenticated.'})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);